version: 2.1

jobs:
  # The build job
  build:
    working_directory: ~/project
    docker:
      - image: circleci/node:12.0-browsers
    steps:
      # Checkout the code from the branch into the working_directory
      - checkout
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Restore local dependencies from cache
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      # Install project dependencies
      - run:
          name: Install local dependencies
          command: npm install
      # Cache local dependencies if they don't exist
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      # Lint the source code
      - run:
          name: Lint
          command: npm run lint
      # Test the source code
      - run:
          name: Test
          command: npm run test
      # Build project with different configuration based on
      # the current branch
      - run:
          name: Building
          command: npm run build
      # Cache the dist folder for the deploy job
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - dist

  # The deploy job
  deploy:
    working_directory: ~/project
    docker:
      - image: circleci/node:12.0-browsers
        environment:
          ANGULAR_TEST: "{ \"SourceDir\":\"src\", \"DistributionDir\":\"dist/amplify-tutorial\", \"BuildCommand\":\"npm.cmd run-script build\", \"StartCommand\":\"ng serve\" }"
          AMPLIFY_TEST: "{ \"projectName\": \"amplifyTutorial\", \"envName\": \"dev\" }"
          FRONTEND_TEST: "{ \"frontend\": \"javascript\", \"framework\": \"angular\", \"config\": $ANGULAR_TEST }"
          AWS_CLOUD_FORMATION_CONFIG_TEST: "{ \"configLevel\": \"project\", \"useProfile\": false, \"accessKeyId\": $AWS_ACCESS_KEY_ID, \"secretAccessKey\": $AWS_SECRET_ACCESS_KEY, \"region\": \"eu-west-2\" }"
          PROVIDERS_TEST: "{ \"awscloudformation\": $AWS_CLOUD_FORMATION_CONFIG_TEST }"
    steps:
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Restore cache from the build job which contains the
      # dist folder that needs to be deployed
      - restore_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      # Install AWS Amplify cli
      - run:
          name: Install Amplify CLI
          command: sudo npm install -g @aws-amplify/cli
      # Deploy to the S3 bucket corresponding to the current branch
      - run:
          name: Deploy
          command: |
            cd dist/amplify-tutorial/
            echo $AMPLIFY_TEST
            echo $FRONTEND_TEST
            echo $PROVIDERS_TEST
            echo AWS_CLOUD_FORMATION_CONFIG_TEST
            echo ANGULAR_TEST
            amplify init --yes --amplify $AMPLIFY_TEST --frontend $FRONTEND_TEST --providers $PROVIDERS_TEST
            amplify publish --yes

workflows:
  version: 2
  # The build and deploy workflow
  build_and_deploy:
    jobs:
      - build
      # The deploy job will only run on the filtered branches and
      # require the build job to be successful before it starts
      - deploy:
          requires:
            - build
